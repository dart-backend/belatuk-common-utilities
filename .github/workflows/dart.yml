# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Betaluk Common Utilities

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: "3.5.4"
      - uses: bluefireteam/melos-action@v3 
        with:
          run-bootstrap: false

      # Install or upgrade the dependencies.
      - id: belatuk_common_upgrade
        name: Install dependencies
        run: melos exec "dart pub upgrade"

      # Verify the use of 'dart format' on each commit.
      - id: belatuk_common_format
        name: Verify source code formatting
        run: melos exec "dart format --output=none --set-exit-if-changed ."

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - id: belatuk_common_analyze
        name: Analyze source code
        run: melos exec "dart analyze"

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed.
      - id: belatuk_common_test
        name: Run tests
        run: melos exec "dart test"

